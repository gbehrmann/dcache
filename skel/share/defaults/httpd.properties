#  -----------------------------------------------------------------------
#     Default values for httpd
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

httpd.cell.name=httpd

httpd.cell.subscribe=${httpd.loginbroker.update-topic},${httpd.pool-monitor-topic}

#
#    Optional config file for configurig the httpd
#    service. If present, it is executed as a batch
#    file as part of the httpd cell startup.
#
httpd.setup=${dcache.paths.etc}/httpd.conf

#
#     Mirrored properties
#
httpd.service.info = ${dcache.queue.info}
httpd.service.alarms=${dcache.service.alarms}
httpd.service.billing=${dcache.queue.billing}
httpd.service.gplazma=${dcache.service.gplazma}
httpd.service.pnfsmanager=${dcache.service.pnfsmanager}
httpd.service.poolmanager=${dcache.service.poolmanager}
httpd.service.spacemanager=${dcache.service.spacemanager}
httpd.service.srmmanager=${dcache.service.srmmanager}
httpd.enable.space-reservation=${dcache.enable.space-reservation}

httpd.loginbroker.update-topic=${dcache.loginbroker.update-topic}
httpd.loginbroker.request-topic=${dcache.loginbroker.request-topic}

httpd.pool-monitor-topic=${dcache.pool-monitor.topic}

httpd.net.port = 2288

# Cell addresses to monitor. Only supported by the old httpd pages. Simple names
# are expected to be named queues or topics and httpd adds recipients of these
# addresses to the list of cells to monitor.
httpd.watch = ${dcache.topic.watched}

#
#     For authenticated pages (all admin pages in the webadmin servlet are
#     only available in authenticated mode).
#
(one-of?true|false)httpd.enable.authn = false

# ---- Whether to expect the haproxy Proxy Protocol
#
# Many load balancers and reverse proxies support the Proxy Protocol, a
# de facto standard introduced by the haproxy product. Support for this
# protocol has to be enabled in both the load balancer/reverse proxy and
# the backend service.
#
# If enabled, the proxy injects the actual clients IP address into the data
# stream, thus letting the backend be aware of the clients address.
#
# Only version 1 of the proxy protocol is supported.
#
(one-of?true|false)httpd.enable.proxy-protocol = false

# ----- Whether to process X-Forwarded-For headers
#
# HTTP reverse proxies typically and HTTP aware load balancers can often
# be configured to inject X-Forwarded-For headers to reveal information
# about the original request the client made to the proxy.
#
# These X-Forwarded-For headers serve a similar role as the proxy protocol
# described above. Being HTTP specific, the header does however reveal
# additional information, such as whether the original connection used
# HTTP or HTTPS. This is particularly important for the Webadmin interface.
#
# In contrast to the proxy protocol setting above, enabling processing of
# the X-Forwarded-For header does not prevent direct access (without a
# proxy), however be aware that this should only be allowed from trusted
# clients; an opponent may mask his or her identity by injecting false
# information through this header.
#
(one-of?true|false)httpd.enable.forwarded-header = false

#
#     Specifies the host for the connector;
#     see further comments for dcache.net.listen in dcache.properties
#
httpd.net.listen=${dcache.net.listen}

#
#     Specifies the TCP port on which the cell accepts https connections.
#
httpd.net.https-port = 8444

# path to host certificate
httpd.authn.hostcert.cert=${dcache.authn.hostcert.cert}

# Host key
httpd.authn.hostcert.key=${dcache.authn.hostcert.key}

# Host key refresh interval
httpd.authn.hostcert.refresh=${dcache.authn.hostcert.refresh}
(one-of?MILLISECONDS|\
	SECONDS|\
	MINUTES|\
	HOURS|\
	DAYS|\
	${dcache.authn.hostcert.refresh.unit})\
httpd.authn.hostcert.refresh.unit=${dcache.authn.hostcert.refresh.unit}

# Path to CA directory
httpd.authn.capath=${dcache.authn.capath}

# How often to check the CA certificates for updates
httpd.authn.capath.refresh=${dcache.authn.capath.refresh}
(one-of?MILLISECONDS|\
	SECONDS|\
	MINUTES|\
	HOURS|\
	DAYS|\
	${dcache.authn.capath.refresh.unit})\
httpd.authn.capath.refresh.unit=${dcache.authn.capath.refresh.unit}

# ---- Certificate Authority Namespace usage mode
(one-of?GLOBUS_EUGRIDPMA|EUGRIDPMA_GLOBUS|GLOBUS|EUGRIDPMA|GLOBUS_EUGRIDPMA_REQUIRE|EUGRIDPMA_GLOBUS_REQUIRE|GLOBUS_REQUIRE|EUGRIDPMA_REQUIRE|EUGRIDPMA_AND_GLOBUS|EUGRIDPMA_AND_GLOBUS_REQUIRE|IGNORE|${dcache.authn.namespace-mode})\
httpd.authn.namespace-mode=${dcache.authn.namespace-mode}

# ---- Certificate Revocation List usage mode
(one-of?REQUIRE|IF_VALID|IGNORE|${dcache.authn.crl-mode})\
httpd.authn.crl-mode=${dcache.authn.crl-mode}

# ---- On-line Certificate Status Protocol usage mode
(one-of?REQUIRE|IF_AVAILABLE|IGNORE|${dcache.authn.ocsp-mode})\
httpd.authn.ocsp-mode=${dcache.authn.ocsp-mode}

#
#     When a user has this GID he can become an Admin for webadmininterface
#
httpd.authz.admin-gid = 0

#
#     Security related properties
#
httpd.authn.ciphers = ${dcache.authn.ciphers}

#
#     The following variables specify the absolute location of static
#     content exposed by the dCache-internal web server.
#
httpd.static-content.dir=${dcache.paths.share}/httpd/static
httpd.static-content.scripts=${httpd.static-content.dir}/scripts
httpd.static-content.docs=${httpd.static-content.dir}/docs
httpd.static-content.images=${httpd.static-content.dir}/images
httpd.static-content.styles=${httpd.static-content.dir}/styles
httpd.static-content.index=${httpd.static-content.dir}/index.html

#
#     Where to write plot image files
#
httpd.static-content.plots=@httpd.static-content.plots@

#
#     Specifies maximum idle time on a connection.
#
httpd.limits.idle-time = 30000
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)httpd.limits.idle-time.unit = MILLISECONDS

#
#     Specifies maximum number of active threads for the service.
#
httpd.limits.threads = 100

#
#     Specifies the resource path to the default XML file for webapps.
#
httpd.container.default-webapp = /org/dcache/admin/webadmin/jettycell/resources/webdefault.xml

#
#     Specifies the path containing .war files
#
httpd.container.webapps.dir = ${dcache.paths.classes}/webapps

#
#     Name will be displayed on some of the webpages as header
#
httpd.html.dcache-instance-name = ${host.name}
httpd.html.dcache-instance-description = ${dcache.description}

#
#     Connection timeout and sleep interval (period) value
#     for communication and data gathering
#
httpd.service.pool.timeout=4000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.pool.timeout.unit=MILLISECONDS
httpd.service.poolmanager.timeout=30000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.poolmanager.timeout.unit=MILLISECONDS
httpd.service.alarms.timeout=10000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.alarms.timeout.unit=MILLISECONDS
httpd.service.billing.timeout=60000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.billing.timeout.unit=MILLISECONDS
httpd.service.poolmonitor-collector.timeout=4000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.poolmonitor-collector.timeout.unit=MILLISECONDS
httpd.service.poolmonitor-collector.period=4000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.poolmonitor-collector.period.unit=MILLISECONDS
httpd.service.activetransfers-collector.timeout=5000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.activetransfers-collector.timeout.unit=MILLISECONDS
httpd.service.activetransfers-collector.period=60000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.activetransfers-collector.period.unit=MILLISECONDS
httpd.service.cellstatus-collector.timeout=5000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.cellstatus-collector.timeout.unit=MILLISECONDS
httpd.service.cellstatus-collector.period=10000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.cellstatus-collector.period.unit=MILLISECONDS
httpd.service.spacetoken-collector.timeout=5000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.spacetoken-collector.timeout.unit=MILLISECONDS
httpd.service.spacetoken-collector.period=10000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.spacetoken-collector.period.unit=MILLISECONDS
httpd.service.restorehandler-collector.timeout=5000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.restorehandler-collector.timeout.unit=MILLISECONDS
httpd.service.restorehandler-collector.period=10000
(one-of?MILLISECONDS|SECONDS|MINUTES)httpd.service.restorehandler-collector.period.unit=MILLISECONDS

httpd.alarms.db.type = ${alarms.db.type}
httpd.alarms.db.url = ${alarms.db.url}
httpd.alarms.db.user = ${alarms.db.user}
httpd.alarms.db.password = ${alarms.db.password}

#  -----------------------------------------------------------------------
#     The following properties control the creation of billing
#     histograms via callouts to the billing service
#  -----------------------------------------------------------------------

#     Whether to generate histograms or not (only if
#     ${billing.enable.db} is 'true')
#
(one-of?true|false)httpd.enable.plots.billing = false

#     Type of image file to produce (JAIDA property)
#
(one-of?gif|png)httpd.plots.billing.type = png

#     Refresh the plots after this time interval
#
httpd.plots.billing.refresh = 5
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)httpd.plots.billing.refresh.unit = MINUTES

#     Height of the plot image in pixels
#
httpd.plots.billing.height = 800

#     Width of the plot image in pixels
#
httpd.plots.billing.width = 1200

#     The default style for the plots
#     connected draws a line between each data point
#     outline draws the first histogram as filled, the others as empty
#     filled draws all histograms as filled, and overlapping
#
(one-of?CONNECTED|OUTLINE|FILLED)httpd.plots.billing.style = CONNECTED

#     The default scale for the plots (lin = linear, log = logarithmic)
#
(one-of?lin|log)httpd.plots.billing.scale = log

#  -----------------------------------------------------------------------
#     The following properties control the creation of pool queue
#     histograms via a round-robin database (org.rrd4j)
#  -----------------------------------------------------------------------

#     Turn on periodic pool queue information collection
#
(one-of?true|false)httpd.enable.plots.pool-queue = false

#     Round-robin database version number
#
httpd.pool-queue.db.version = 2

#     The rrd4j heartbeat is the timespan (in seconds) which determines
#     whether a data value is valid and can be used to compute the
#     value at the current consolidation point.  If an update comes
#     after the heartbeat, the value for that point is considered unknown.
#     We compute the heartbeat on the basis of the step, multiplying it by
#     this factor.  It will normally not be necessary to change this value.
#
httpd.pool-queue.db.heartbeat-factor = 1.5

#     Type of image file to produce
#
httpd.plots.pool-queue.type = png

#     Height of the plot image in pixels
#
httpd.plots.pool-queue.height = 800

#     Width of the plot image in pixels
#     Note:  the width must be >= x span / min time step.
#
httpd.plots.pool-queue.width = 1158

#     How wide the histogram X-axis should be
#
httpd.plots.pool-queue.x-span = 2

#     Unit for the histogram X-axis span calculation
#
(one-of?MINUTES|HOURS|DAYS)httpd.plots.pool-queue.x-span.unit = DAYS

#     The histogram X-axis minimum time step
#
httpd.plots.pool-queue.min-time-step = 5

#     Unit for the histogram X-axis minimum time step
#
(one-of?MINUTES|HOURS|DAYS)httpd.plots.pool-queue.min-time-step.unit = MINUTES

#     Unit for placing X-axis major grid lines
#
(one-of?MINUTES|HOURS|DAYS)httpd.plots.pool-queue.major.unit = DAYS

#     Number of major grid units between major grid lines
#
httpd.plots.pool-queue.grid.spacing.major = 1

#     Unit for placing X-axis minor grid lines
#     (set to be the same as major grid lines for less clutter)
#
(one-of?MINUTES|HOURS|DAYS)httpd.plots.pool-queue.minor.unit = DAYS

#     Number of minor grid units between minor grid lines
#     (set to be the same as major grid lines for less clutter)
#
httpd.plots.pool-queue.grid.spacing.minor = 1

#     Number of extra steps to show on the right margin
#
httpd.plots.pool-queue.right-margin = 3

#     Label precision; if the format were exact, this would be 0, but since
#     the default unit is DAYS, we use 24 so that the label gets centered
#     at noon (12) rather than at midnight
#
httpd.plots.pool-queue.label-span = 24

#     Unit for placing X-axis labels
#
(one-of?MINUTES|HOURS|DAYS)httpd.plots.pool-queue.label.unit = DAYS

#     Number of label units between X-axis labels
#
httpd.plots.pool-queue.x-label.spacing = 1

#     Format for displaying the date/time as X-axis label.
#     This follows strftime conventions except that the '%' marker is not used
httpd.plots.pool-queue.x-label.format = E MMM dd YYYY HH:mm

#     Label which should appear on the Y-axis
#
httpd.plots.pool-queue.y-label = Number of movers


#  Location of statistics generated by statistics module
#
httpd.statistics.location=${statistics.location}

#
#      Document which TCP ports are opened
#
(immutable)httpd.net.ports.tcp.when-authenticated-is-false=${httpd.net.port}
(immutable)httpd.net.ports.tcp.when-authenticated-is-true=${httpd.net.port} ${httpd.net.https-port}
(immutable)httpd.net.ports.tcp=${httpd.net.ports.tcp.when-authenticated-is-${httpd.enable.authn}}

#
#     Obsolete
#
